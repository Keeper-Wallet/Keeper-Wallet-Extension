name: Prepare Release
on:
  push:
    tags:
      - v[0-9]+\.[0-9]+\.[0-9]+
      - v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    steps:
      - name: Get sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Read .nvmrc for Node.js version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '${{ steps.nvm.outputs.NODE_VERSION }}'

      - name: Install dependencies
        run: npm ci

      - name: Extract info from tag
        run: |
          VERSION=$(echo $GITHUB_REF_NAME | sed -e 's/^v//')
          echo ::set-output name=VERSION::$VERSION
          echo ::set-output name=ENVIRONMENT::$(echo $VERSION | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+$' && echo "production" || echo "staging")
          echo ::set-output name=SENTRY_RELEASE::extension@$VERSION
        id: tagInfo

      - name: Create empty config.json
        run: echo '{}' > config.json

      - name: Create config.json for production
        run: |
          cat > config.json << EOF
          {
            "lokaliseApiKey": "$LOKALISE_TOKEN",
            "statisticsApiKey": "$STATISTICS_TOKEN"
          }
          EOF
        if: steps.tagInfo.outputs.ENVIRONMENT == 'production'
        env:
          LOKALISE_TOKEN: ${{ secrets.LOKALISE_TOKEN }}
          STATISTICS_TOKEN: ${{ secrets.STATISTICS_TOKEN }}

      - name: Build
        run: npm run dist
        env:
          NODE_ENV_VER: ${{ steps.tagInfo.outputs.VERSION }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_ENVIRONMENT: ${{ steps.tagInfo.outputs.ENVIRONMENT }}
          SENTRY_RELEASE: ${{ steps.tagInfo.outputs.SENTRY_RELEASE }}

      - name: Create Sentry Release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: waves-keeper
          SENTRY_PROJECT: extension
        with:
          environment: ${{ steps.tagInfo.outputs.ENVIRONMENT }}
          finalize: false
          set_commits: skip
          sourcemaps: dist/build
          url_prefix: ~/
          version: ${{ steps.tagInfo.outputs.SENTRY_RELEASE }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          fail_on_unmatched_files: true
          files: dist/*.zip
