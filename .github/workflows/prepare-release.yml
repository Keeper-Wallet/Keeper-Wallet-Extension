name: Prepare Release
on:
  push:
    tags:
      - v[0-9]+\.[0-9]+\.[0-9]+
      - v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+
jobs:
  prepare-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version-file: .nvmrc
      - run: yarn --frozen-lockfile
      - name: Extract info from tag
        id: tagInfo
        run: |
          VERSION=$(echo $GITHUB_REF_NAME | sed -e 's/^v//')
          cat >> $GITHUB_OUTPUT << EOF
          ENVIRONMENT=$(echo $VERSION | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+$' && echo "production" || echo "staging")
          SENTRY_RELEASE=extension@$VERSION
          VERSION=$VERSION
          EOF
      - if: steps.tagInfo.outputs.ENVIRONMENT == 'production'
        run: echo AMPLITUDE_API_KEY=$AMPLITUDE_API_KEY >> $GITHUB_ENV
        env:
          AMPLITUDE_API_KEY: ${{ secrets.METRICS_TOKEN }}
      - run: yarn run build
        env:
          NODE_ENV_VER: ${{ steps.tagInfo.outputs.VERSION }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_ENVIRONMENT: ${{ steps.tagInfo.outputs.ENVIRONMENT }}
          SENTRY_RELEASE: ${{ steps.tagInfo.outputs.SENTRY_RELEASE }}
      - run: yarn run zip
      - uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: waves-keeper
          SENTRY_PROJECT: extension
        with:
          environment: ${{ steps.tagInfo.outputs.ENVIRONMENT }}
          finalize: false
          set_commits: skip
          sourcemaps: dist/build
          url_prefix: ~/
          version: ${{ steps.tagInfo.outputs.SENTRY_RELEASE }}
      - uses: softprops/action-gh-release@v1
        with:
          draft: true
          fail_on_unmatched_files: true
          files: dist/*.zip
